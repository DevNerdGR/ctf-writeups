from Cryptodome.Util.number import long_to_bytes

"""
flag = "grey{flag_here}"

e = 3
p, q = getPrime(512), getPrime(512)
N = p * q
m = bytes_to_long(flag.encode())
C = pow(m,e)

assert C < N
while (C < N):
    C *= 2
    print("Tung!")

# now C >= N

while (C >= N):
    C -= N
    print("Sahur!")


print(f"{e = }")
print(f"{N = }")
print(f"{C = }")
"""

e = 3
N = 140435453730354645791411355194663476189925572822633969369789174462118371271596760636019139860253031574578527741964265651042308868891445943157297334529542262978581980510561588647737777257782808189452048059686839526183098369088517967034275028064545393619471943508597642789736561111876518966375338087811587061841
C = 49352042282005059128581014505726171900605591297613623345867441621895112187636996726631442703018174634451487011943207283077132380966236199654225908444639768747819586037837300977718224328851698492514071424157020166404634418443047079321427635477610768472595631700807761956649004094995037741924081602353532946351

C += N

for i in range(164):
    C //= 2

def iroot3(n):
    lo = 0
    hi = n
    while lo <= hi:
        mid = lo + ((hi - lo) // 2)

        if n > mid ** 3:
            lo = mid
        elif n < mid ** 3:
            hi = mid
        else:
            return mid

m = iroot3(C)
m = long_to_bytes(int(m)).decode()

print(m)